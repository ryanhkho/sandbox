{"version":"1.45.0","errors":[],"results":[{"check_id":"react-dangerouslysetinnerhtml","path":"test.js","start":{"line":11,"col":70,"offset":336},"end":{"line":11,"col":77,"offset":343},"extra":{"metavars":{"$X":{"start":{"line":9,"col":25,"offset":216},"end":{"line":9,"col":28,"offset":219},"abstract_content":"foo"}},"fingerprint":"381a13faa286768c315be1e213292121e87fd8c288d2e959870e6132ac42abe9dc201a0ee1130e56ce1e5f81ad33b355e9c11b2c9a9482a675b4f7ad492da904_0","lines":"    let params = {smth: 'test123', dangerouslySetInnerHTML: {__html: foo.bar},a:b};","message":"Detection of dangerouslySetInnerHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use dangerouslySetInnerHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://react.dev/reference/react-dom/components/common#dangerously-setting-the-inner-html"],"category":"security","confidence":"MEDIUM","technology":["react"],"license":"Commons Clause License Condition v1.0[LGPL-2.1-only]","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","vulnerability_class":["Cross-Site-Scripting (XSS)"]},"severity":"ERROR","is_ignored":false,"engine_kind":"OSS","validation_state":"NO_VALIDATOR"}}],"paths":{"scanned":["noGo/nope.js","test.js"]},"skipped_rules":[]}
